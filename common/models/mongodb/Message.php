<?php

namespace common\models\mongodb;

use common\Core;
use common\models\Setting;
use Yii;
use yii\mongodb\ActiveRecord;
use yii\mongodb\Query;

/**
 * This is the model class for collection "message".
 *
 * @property \MongoDB\BSON\ObjectID|string $_id
 * @property mixed $category
 * @property mixed $language
 * @property mixed $message
 * @property mixed $translation
 * @property mixed $is_translated
 */
class Message extends ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function collectionName()
    {
        return 'message';
    }

    /**
     * @inheritdoc
     */
    public function attributes()
    {
        return [
            '_id',
            'category',
            'language',
            'message',
            'translation',
            'is_translated',
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['category', 'language', 'message', 'translation', 'is_translated'], 'safe']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            '_id' => Yii::t('app', 'ID'),
            'category' => Yii::t('app', 'Category'),
            'language' => Yii::t('app', 'Language'),
            'message' => Yii::t('app', 'Message'),
            'translation' => Yii::t('app', 'Translation'),
            'is_translated' => Yii::t('app', 'Translated'),
        ];
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        if(!$insert){
            $this->is_translated=true;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * get message locale list
     * @param array $e
     * @return array
     */
    public static function getLocaleList($e=[]){
        /* current translation languages */
        $l=(new Query())->select(['language'])->from(self::collectionName())->distinct('language');
        $l[]=Yii::$app->sourceLanguage;
        /* site default language */
        $default=Setting::getValue('language');
        if(!in_array($default, $l)){
            $l[]=$default;
        }

        $list= Core::getLocaleList($l);
        /* exception */
        if(is_array($e)){
            foreach($e as $key){
                unset($list[$key]);
            }
        }

        return $list;
    }

    /**
     * @return mixed
     */
    public static function getCategoryList(){
        /* @var $collection \MongoCollection */
        $collection = Yii::$app->mongodb->getCollection(self::collectionName());
        $items = $collection->distinct('category');
        return array_combine(array_values($items), $items);
    }

    /**
     * get id
     * @return \MongoDB\BSON\ObjectID|string
     */
    public function getId(){
        return $this->_id;
    }
}
