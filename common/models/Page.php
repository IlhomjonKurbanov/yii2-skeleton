<?php

namespace common\models;

use Yii;

/**
 * This is the model class for Page.
 *
 * @property \MongoDB\BSON\ObjectID|string|null $id
 * @property string $slug
 * @property integer $show_description
 * @property integer $show_update_date
 *
 * @property PageData[] $data
 * @property PageData $content
 */
class Page extends PageBase
{


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['show_description', 'show_update_date'], 'integer'],
            [['slug'], 'string', 'max' => 100],
            //[['id'], 'match', 'patten'=>'/^[a-z]+$/i'],
            [['slug'], 'unique'],
            [['slug', 'show_description', 'show_update_date'], 'required', 'on' => ['create']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'slug' => Yii::t('app', 'Slug'),
            'show_description' => Yii::t('app', 'Show Description'),
            'show_update_date' => Yii::t('app', 'Show Update Date'),
        ];
    }

    /**
     * @return \yii\db\ActiveQueryInterface
     */
    public function getData()
    {
        return $this->hasMany(PageData::class(), ['slug' => 'slug']);
    }


    /**
     * @return array|null|\yii\db\ActiveQueryInterface
     */
    public function getContent()
    {
        $data = PageData::find()->where(['slug'=>$this->slug, 'language' => Yii::$app->language, 'status'=>PageData::STATUS_ACTIVE])->one();
        if (!$data) {
            $data = PageData::find()->where(['slug'=>$this->slug, 'status'=>PageData::STATUS_ACTIVE])->one();
        }
        return $data;
    }



    /**
     * @return mixed|null
     */
    public function getPageTitle()
    {
        $data = PageData::find()->select('title')->where(['slug'=>$this->slug, 'language' => Yii::$app->language, 'status'=>PageData::STATUS_ACTIVE])->one();
        if (!$data) {
            $data = PageData::find()->select('title')->where(['slug'=>$this->slug, 'status'=>PageData::STATUS_ACTIVE])->one();
        }
        return isset($data)?$data->title:'unknown';
    }



    /**
     * @inheritdoc
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        $this->slug=strtolower($this->slug);
        $this->show_description=(int)$this->show_description;
        $this->show_update_date=(int)$this->show_update_date;
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * get page title base on language
     * @param $id
     * @return mixed|null
     */
    public static function getTitle($id){
        $page=Page::find()->where(['slug'=>$id])->one();
        if($page){
            return $page->getPageTitle();
        }
        return null;
    }


}
