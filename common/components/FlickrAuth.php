<?php
/**
 * @author Harry Tang <harry@powerkernel.com>
 * @link https://powerkernel.com
 * @copyright Copyright (c) 2016 Power Kernel
 */

namespace common\components;

use common\models\Setting;
use yii\authclient\OAuth1;

/**
 * Flickr allows authentication via Flickr OAuth.
 *
 * In order to use Flickr OAuth you must register your application with flickr
 *
 * Example application configuration:
 *
 * ```php
 * 'components' => [
 *     'authClientCollection' => [
 *         'class' => 'yii\authclient\Collection',
 *         'clients' => [
 *             'flickr' => [
 *                 'class' => 'common\components\FlickrAuth',
 *                 'perms'=>'read',
 *                 'consumerKey' => 'flickr_consumer_key',
 *                 'consumerSecret' => 'flickr_consumer_secret',
 *             ],
 *         ],
 *     ]
 *     ...
 * ]
 * ```
 * @author Harry Tang <harry@powerkernel.com>
 */
class FlickrAuth extends OAuth1
{
    public $perms = 'read';

    /**
     * @inheritdoc
     */
    public $authUrl = 'https://www.flickr.com/services/oauth/authorize';
    /**
     * @inheritdoc
     */
    public $requestTokenUrl = 'https://www.flickr.com/services/oauth/request_token';
    /**
     * @inheritdoc
     */
    public $requestTokenMethod = 'GET';
    /**
     * @inheritdoc
     */
    public $accessTokenUrl = 'https://www.flickr.com/services/oauth/access_token';
    /**
     * @inheritdoc
     */
    public $accessTokenMethod = 'GET';
    /**
     * @inheritdoc
     */
    public $apiBaseUrl = 'https://api.flickr.com/services/rest';
    /**
     * @var array list of extra parameters, which should be used, while requesting user attributes from Flickr API.
     * For example:
     *
     * ```php
     * [
     *     'include_email' => 'true'
     * ]
     * ```
     *
     * @see https://dev.twitter.com/rest/reference/get/account/verify_credentials
     * @since 2.0.6
     */
    public $attributeParams = [
    ];


    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if (in_array($this->perms, ['read', 'write', 'delete'])) {
            $this->authUrl .= '?perms=' . $this->perms;
        }

        if (empty($this->consumerKey) or empty($this->consumerSecret)) {
            $this->consumerKey = Setting::getValue('flickrClientKey');
            $this->consumerSecret = Setting::getValue('flickrClientSecret');
        }
    }

    /**
     * @inheritdoc
     */
    protected function initUserAttributes()
    {
        $params = [
            'method' => 'flickr.test.login'
        ];
        return $this->api('', 'GET', $params);
    }

    /**
     * @inheritdoc
     */
    protected function defaultName()
    {
        return 'flickr';
    }

    /**
     * @inheritdoc
     */
    protected function defaultTitle()
    {
        return 'Flickr';
    }

    /**
     * @inheritdoc
     */
    protected function defaultViewOptions()
    {
        return [
            'popupWidth' => 860,
            'popupHeight' => 600,
        ];
    }

    /**
     * @inheritdoc
     */
    public function api($apiSubUrl, $method = 'GET', $data = [], $headers = [])
    {
        $format=['format'=>'json', 'nojsoncallback'=>1];
        $params=array_merge($format, $data);
        return parent::api($apiSubUrl, $method, $params, $headers); // TODO: Change the autogenerated stub
    }


}
